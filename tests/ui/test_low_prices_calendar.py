import pytest

from conftest import TestMessage, TestBot
from air_bot.handlers.low_prices_calendar import show_calendar

CALENDAR_TESTS_DATA = [
    {"name": "Нет билетов", "month": 1, "tickets": {}},
    {
        "name": "Один билет",
        "month": 7,
        "tickets": {
            "2023-07-01": {
                "origin": "VVO",
                "destination": "MOW",
                "origin_airport": "VVO",
                "destination_airport": "SVO",
                "price": 25402,
                "airline": "FV",
                "flight_number": "6316",
                "departure_at": "2023-07-01T19:30:00+10:00",
                "return_at": "2023-07-17T15:40:00+03:00",
                "transfers": 0,
                "return_transfers": 0,
                "duration": 1020,
                "duration_to": 525,
                "duration_back": 495,
                "link": "/search/test_example",
            }
        },
    },
    {
        "name": "7 билетов, ссылки и цены разной длины",
        "month": 7,
        "tickets": {
            "2023-07-01": {
                "origin": "VVO",
                "destination": "MOW",
                "origin_airport": "VVO",
                "destination_airport": "SVO",
                "price": 1,
                "airline": "FV",
                "flight_number": "6316",
                "departure_at": "2023-07-01T19:30:00+10:00",
                "return_at": "2023-07-17T15:40:00+03:00",
                "transfers": 0,
                "return_transfers": 0,
                "duration": 1020,
                "duration_to": 525,
                "duration_back": 495,
                "link": "/link__one",
            },
            "2023-07-02": {
                "origin": "VVO",
                "destination": "MOW",
                "origin_airport": "VVO",
                "destination_airport": "SVO",
                "price": 10,
                "airline": "FV",
                "flight_number": "6252",
                "departure_at": "2023-07-02T08:40:00+10:00",
                "return_at": "2023-07-15T01:35:00+03:00",
                "transfers": 0,
                "return_transfers": 0,
                "duration": 1035,
                "duration_to": 530,
                "duration_back": 505,
                "link": "/link___two",
            },
            "2023-07-03": {
                "origin": "VVO",
                "destination": "MOW",
                "origin_airport": "VVO",
                "destination_airport": "SVO",
                "price": 100,
                "airline": "FV",
                "flight_number": "6252",
                "departure_at": "2023-07-03T08:40:00+10:00",
                "return_at": "2023-07-24T15:40:00+03:00",
                "transfers": 0,
                "return_transfers": 0,
                "duration": 1025,
                "duration_to": 530,
                "duration_back": 495,
                "link": "/link____three",
            },
            "2023-07-04": {
                "origin": "VVO",
                "destination": "MOW",
                "origin_airport": "VVO",
                "destination_airport": "SVO",
                "price": 1000,
                "airline": "FV",
                "flight_number": "6252",
                "departure_at": "2023-07-04T08:40:00+10:00",
                "return_at": "2023-07-08T01:35:00+03:00",
                "transfers": 0,
                "return_transfers": 0,
                "duration": 1035,
                "duration_to": 530,
                "duration_back": 505,
                "link": "/link__four",
            },
            "2023-07-05": {
                "origin": "VVO",
                "destination": "MOW",
                "origin_airport": "VVO",
                "destination_airport": "SVO",
                "price": 10000,
                "airline": "FV",
                "flight_number": "6252",
                "departure_at": "2023-07-05T08:40:00+10:00",
                "return_at": "2023-07-22T22:00:00+03:00",
                "transfers": 0,
                "return_transfers": 0,
                "duration": 1040,
                "duration_to": 530,
                "duration_back": 510,
                "link": "/link__five",
            },
            "2023-07-06": {
                "origin": "VVO",
                "destination": "MOW",
                "origin_airport": "VVO",
                "destination_airport": "SVO",
                "price": 25412,
                "airline": "FV",
                "flight_number": "6252",
                "departure_at": "2023-07-06T08:40:00+10:00",
                "return_at": "2023-07-29T01:35:00+03:00",
                "transfers": 0,
                "return_transfers": 0,
                "duration": 1035,
                "duration_to": 530,
                "duration_back": 505,
                "link": "/link_six",
            },
            "2023-07-07": {
                "origin": "VVO",
                "destination": "MOW",
                "origin_airport": "VVO",
                "destination_airport": "SVO",
                "price": 25823,
                "airline": "FV",
                "flight_number": "6252",
                "departure_at": "2023-07-07T08:40:00+10:00",
                "return_at": "2023-07-10T15:40:00+03:00",
                "transfers": 0,
                "return_transfers": 0,
                "duration": 1025,
                "duration_to": 530,
                "duration_back": 495,
                "link": "/link_seven",
            },
        },
    },
]


@pytest.mark.parametrize("test_data", CALENDAR_TESTS_DATA)
async def test_correct_formatting(
    bot: TestBot, message_for_answer: TestMessage, test_data
):
    await bot.send_message(text=test_data["name"])
    await show_calendar(message_for_answer, test_data["month"], test_data["tickets"])
    # lines = ['`01 \- 1 ₽    \|`',
    #         '`05 \- 10000 ₽\|`']
    # text = "\n".join(lines)
    # text = f"```{text}```"
    # await bot.send_message(text=text, parse_mode="MarkdownV2")
